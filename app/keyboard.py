from aiogram.types import ReplyKeyboardMarkup, KeyboardButton, InlineKeyboardMarkup, InlineKeyboardButton
from aiogram.utils.keyboard import ReplyKeyboardBuilder, InlineKeyboardBuilder

import random

food_courts = InlineKeyboardMarkup(inline_keyboard=[
    [InlineKeyboardButton(text='RedRabbitüêá', callback_data='red-rabbit'),
     InlineKeyboardButton(text='–•–∞–Ω –ë—É–∑‚ô®Ô∏è', callback_data='khan-buz')]
])

red_rabbit = InlineKeyboardMarkup(inline_keyboard=[
    [InlineKeyboardButton(text='RedRabbitüêá', url='https://redrabbit-academ.ru/')],
    [InlineKeyboardButton(text='–ú–µ–Ω—é', callback_data='red-rabbit-menu')],
    [InlineKeyboardButton(text='–ù–µ –∑–Ω–∞—é, —á—Ç–æ –∑–∞–∫–∞–∑–∞—Ç—å', callback_data='rr-random')]])

khan_buz = InlineKeyboardMarkup(inline_keyboard=[
    [InlineKeyboardButton(text='–•–∞–Ω –ë—É–∑‚ô®Ô∏è', url='https://khan-buz.ru/')],
    [InlineKeyboardButton(text='–ú–µ–Ω—é', callback_data='khan-buz-menu')],
    [InlineKeyboardButton(text='–ù–µ –∑–Ω–∞—é, —á—Ç–æ –∑–∞–∫–∞–∑–∞—Ç—å', callback_data='kh-random')]])


class Food:
    def __init__(self, name: str, price: int):
        self.name = name
        self.price = price


red_rabbit_menu_positions = {
    'rr–ü–∏—Ü—Ü–∞': [Food('–ê–Ω—Ç–∏ –ì–∞–≤–∞–π–∏', 390), Food('–ì—Ä—É—à–∞-–≥–æ—Ä–≥–æ–Ω–¥–∑–æ–ª–∞', 390),
                Food('–ú—è—Å–Ω–æ–π –±–æ—Å—Å', 480), Food('–ß–µ—Ç—ã—Ä–µ —Å—ã—Ä–∞', 420),
                Food('–ë–∞—Ä–±–µ–∫—é –ø–∏—Ü—Ü–∞', 390), Food('–ü–µ–ø–ø–µ—Ä–æ–Ω–∏', 390),
                Food('–ú–∞—Ä–≥–∞—Ä–∏—Ç–∞', 290), Food('–ú–∞–Ω—Ö–µ—Ç—Ç–µ–Ω', 360), Food('–ë–µ–∫–æ–Ω, –ø–µ–ø–ø–µ—Ä–æ–Ω–∏, 3 —Å—ã—Ä–∞', 420),
                Food('–¶–µ–∑–∞—Ä—å-–ø–∏—Ü—Ü–∞', 390), Food('–§–æ–∫–∞—á—á–∞ —Å –ø–µ—Å—Ç–æ', 190), Food('–§–æ–∫–∞—á—á–∞ –ú–∞—Ä–≥–∞—Ä–∏—Ç—Ç–∞', 195)],
    'rr–°–∞–ª–∞—Ç—ã': [Food('–¶—ã–ø–ª–µ–Ω–æ–∫ —Å –≥—Ä—É—à–µ–π –≤ —Å–æ—É—Å–µ –¥–æ—Ä –±–ª—é', 380), Food('–¶–µ–∑–∞—Ä—å', 420),
                 Food('–° —Ä–æ—Å—Ç–±–∏—Ñ–æ–º', 450), Food('–° –∫—Ä–µ–≤–µ—Ç–∫–∞–º–∏ –∏ –∞–≤–æ–∫–∞–¥–æ', 420)],
    'rr–ó–∞–∫—É—Å–∫–∏': [Food('–ë—Ä—É—Å–∫–µ—Ç—Ç–∞ —Å —Ä–æ—Å—Ç–±–∏—Ñ–æ–º', 360), Food('–ë—Ä—É—Å–∫–µ—Ç—Ç–∞ —Å –≥—É–∞–∫–∞–º–æ–ª–µ', 260),
                  Food('–†–æ—Å—Ç–±–∏—Ñ', 490), Food('–°—Ç—Ä–æ–≥–∞–Ω–∏–Ω–∞ –∏–∑ –∫—Ä–∞—Å–Ω–æ–π —Ä—ã–±—ã', 360)],
    'rr–°—É–ø—ã': [Food('–¢–æ–º–∞—Ç–Ω—ã–π —Å –æ–ª–∏–≤–∫–æ–≤—ã–º –º–∞—Å–ª–æ–º –∏ –º–∞—Ä–≥—Ä–∞—Ä–∏—Ç–æ–π', 310), Food('–°—ã—Ä–Ω—ã–π —Å —Ñ–æ–∫–∞—á—á–∞', 310),
               Food('–¢–æ–º –Ø–º —Å —Ü—ã–ø–ª–µ–Ω–∫–æ–º', 400), Food('–¢–æ–º –Ø–º —Å —Ç–∏–≥—Ä–æ–≤—ã–º–∏ –∫—Ä–µ–≤–µ—Ç–∫–∞–º–∏', 450),
               Food('–ë—É–ª—å–æ–Ω —Å —è–π—Ü–æ–º', 160)],
    'rr–ü–∞—Å—Ç–∞': [Food('–ö–∞—Ä–±–æ–Ω–∞—Ä–∞ —Å –±–µ–∫–æ–Ω–æ–º –∏ —è–π—Ü–æ–º', 400), Food('–ú–∏—Ç–±–æ–ª—ã –≤ —Ç–æ–º–∞—Ç–Ω–æ–º —Å–æ—É—Å–µ', 400),
                Food('–ü–∞—Å—Ç–∞ –¢–æ–º —è–º —Å —Ü—ã–ø–ª–µ–Ω–∫–æ–º', 490), Food('–ü–∞—Å—Ç–∞ –¢–æ–º —è–º —Å –∫—Ä–µ–≤–µ—Ç–∫–∞–º–∏', 540),
                Food('–ü–∞—Å—Ç–∞ —Å –ø–µ—Å—Ç–æ', 360)],
    'rr–î–µ—Å–µ—Ä—Ç—ã': [Food('–ú–æ—Ä–∫–æ–≤–Ω—ã–π —Ç–æ—Ä—Ç —Å –≥–≤–æ–∑–¥–∏—á–Ω—ã–º –∫—Ä–µ–º–æ–º', 260),
                  Food('–ß–∏–∑–∫–µ–π–∫ –º–∞–Ω–≥–æ–≤—ã–π', 290)]
}

red_rabbit_random_variants = ['730—Ä.\n–°—É–ø —Å—ã—Ä–Ω—ã–π —Å —Ñ–æ–∫–∞—á—á–∞\n–°–∞–ª–∞—Ç —Ü–µ–∑–∞—Ä—å 420—Ä.',
                              '680—Ä.\n–ü–∏—Ü—Ü–∞ –ø–µ–ø–ø–µ—Ä–æ–Ω–∏ 22—Å–º\n–ß–∏–∑–∫–µ–π–∫ –º–∞–Ω–≥–æ–≤—ã–π']

khan_buz_menu_positions = {
    'kh–ë—É—É–∑—ã': [Food('–ë—É—É–∑—ã', 65)],
    'kh–°—É–ø—ã': [Food('–ë–æ—Ä—â 200–≥—Ä', 95), Food('–ë–æ—Ä—â 400–≥—Ä', 139),
               Food('–õ–∞–≥–º–∞–Ω', 155), Food('–° –≥–æ–≤—è–¥–∏–Ω–æ–π', 105),
               Food('–° –∫—É—Ä–∏—Ü–µ–π', 95), Food('–¢–æ–º –Ø–º', 290)],
    'kh–í—Ç–æ—Ä–æ–µ': [Food('–ü–ª–æ–≤ —Å –∫—É—Ä–∏—Ü–µ–π', 185),
                 Food('–õ–∞–ø—à–∞ —Å –≥–æ–≤—è–¥–∏–Ω–æ–π –≤ —É—Å—Ç—Ä–∏—á–Ω–æ–º —Å–æ—É—Å–µ', 205),
                 Food('–ª–∞–ø—à–∞ —Å –∫—É—Ä–∏—Ü–µ–π –≤ —Å–ª–∏–≤–æ—á–Ω–æ–º —Å–æ—É—Å–µ', 185)],
    'kh–°–∞–ª–∞—Ç—ã': [Food('–°–≤–µ–∫–æ–ª—å–Ω—ã–π', 69), Food('–ú–æ—Ä–∫–æ–≤—å –ø–æ-–∫–æ—Ä–µ–π—Å–∫–∏', 59),
                 Food('–í–∏—Ç–∞–º–∏–Ω–Ω—ã–π', 59), Food('–ö–æ—É–ª —Å–ª–æ—É', 69), Food('–ò–∑ –±–∞–∫–ª–∞–∂–∞–Ω–æ–≤', 109)],
    'kh–ù–∞–ø–∏—Ç–∫–∏': [Food('–ß–∞–π', 45), Food('–ö–æ—Ñ–µ', 55), Food('–ú–æ—Ä—Å', 85),
                  Food('–ê–ª—Ç–∞–π –ê–∫–≤–∞', 89), Food('–ö–æ–ª–∞ –ë–æ—á–∫–∞—Ä–∏', 109)],
    'kh–î–µ—Å–µ—Ä—Ç': [Food('–ë–æ–æ–≤—ã', 89)]
}

khan_buz_random_variants = ['319—Ä.\n–ú–æ—Ä–∫–æ–≤—å –ø–æ-–∫–æ—Ä–µ–π—Å–∫–∏\n4 –±—É—É–∑—ã',
                            '485—Ä.\n–¢–æ–º —è–º\n3 –±—É—É–∑—ã',
                            '380—Ä.\n–õ–∞–ø—à–∞ —Å –∫—É—Ä–∏—Ü–µ–π –≤ —Å–ª–∏–≤–æ—á–Ω–æ–º —Å–æ—É—Å–µ 200–≥—Ä\n3 –±—É—É–∑—ã']


def inline_red_rabbit_menu():
    red_rabbit_menu_keyboard = InlineKeyboardBuilder()

    for position in red_rabbit_menu_positions.keys():
        red_rabbit_menu_keyboard.add(InlineKeyboardButton(text=position[2:], callback_data=position))

    red_rabbit_menu_keyboard.add(InlineKeyboardButton(text='–ù–∞–∑–∞–¥üîô', callback_data='rr-menu-back'))

    return red_rabbit_menu_keyboard.adjust(2).as_markup()


def inline_khan_buz_menu():
    khan_buz_menu_keyboard = InlineKeyboardBuilder()

    for position in khan_buz_menu_positions.keys():
        khan_buz_menu_keyboard.add(InlineKeyboardButton(text=position[2:], callback_data=position))

    khan_buz_menu_keyboard.add(InlineKeyboardButton(text='–ù–∞–∑–∞–¥üîô', callback_data='kh-menu-back'))

    return khan_buz_menu_keyboard.adjust(2).as_markup()


def process_food_data(category):
    answer_text = ''

    for food in category:
        answer_text += food.name + ' ' + str(food.price) + '—Ä.\n'

    return answer_text


def process_random(dishes):
    idea = ''
    cost = 0

    for i in range(0, 3):
        name, category = random.choice(list(dishes.items()))
        dish = category[random.randint(0, len(category) - 1)]
        idea += name[2:] + ' ' + dish.name + '\n'
        cost += dish.price

    return str(cost) + '—Ä' + '\n' + idea


game_numbers = {}

stickers = ["CAACAgIAAxkBAAELzGFmAv6Cmuf3eTLOrjA0y3GsAAEYOVYAAugzAAKE3shKDfMChELOzVQ0BA",
            "CAACAgIAAxkBAAELzGNmAv6S0WiEuvAak0I6AyYsVCXfdAACYkcAAqaByErr88hDy6wL6jQE",
            "CAACAgIAAxkBAAELzGVmAv6h_sFRvkrxzmn0dKOshpntZQACoz4AAjFC6EgFE8TH5IiMBjQE",
            "CAACAgIAAxkBAAELzGdmAv62Vl-9VR-r7xo7CdFBj4pkZgACmzgAAlBrwUuy7lEoMZ4wkTQE",
            "CAACAgIAAxkBAAELzGlmAv7SI64fMIVPh6IST-LxdD-JMgACzwADys3hF26Da_zo4wFDNAQ",
            "CAACAgIAAxkBAAELzGtmAv77rkn5a9E-CWU2YUcwKlD6fgACriUAAjSXoEs7eoAdUThGczQE",
            "CAACAgIAAxkBAAELzG9mAv92KBQ7KaMC0DbBdmvCkyTWQgACaQADMWfCNYjEs8VevoiQNAQ",
            "CAACAgIAAxkBAAELzHFmAv-jyLSuYKifRVVnW8f2Xm_RegACXx4AAnzKcEuSqgPA7RX3YTQE",
            "CAACAgIAAxkBAAELzHNmAv-56rnkvCggnM_VogZFxCQjKwACDR4AAiPqcUtYVUlSOLUU1TQE"]
